#main module
import json
import os
import time
from time import sleep, time
from datetime import datetime, timedelta
from requests import get
#telegram --------
from telebot.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           KeyboardButton, ReplyKeyboardMarkup)
#----------------
""" –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏ """
# import modules.Emergency as Emergency
# import handlers.utils as utils
import keyboards
import database

from dotenv import load_dotenv
import telebot

load_dotenv()
bot_tokken = os.getenv('tokken')
Bot = telebot.TeleBot(bot_tokken)

@Bot.message_handler(commands=['id'])
def send_id(message):
    """ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è '/id'. """
    if message.chat.type != 'private':
        Bot.send_message(message.chat.id, f"ID —á–∞—Ç–∞: {message.chat.id}")
    else:
        Bot.send_message(message.from_user.id, f"–í–∞—à ID: {message.from_user.id}")

# –û–±—ä—è–≤–∏–ª–∏ –≤–µ—Ç–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏—Ç –ø—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ :)
@Bot.message_handler(content_types=['contact'])
def contact(message):
    keybor
    user_id = message.from_user.id
    if get_status(user_id) == 0:  # –ï—Å–ª–∏ status 0
        user_name = str(message.from_user.first_name)
        time_start = time()
        if message.contact is not None:  # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç <strong>contact</strong> –Ω–µ —Ä–∞–≤–µ–Ω –Ω—É–ª—é
            phone_num = message.contact.phone_number
            # print ("–í–∞—à –Ω–æ–º–µ—Ä: " + phone_num) #debug
            my_number = utils.mob_format(phone_num)
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É
            DataBase.set_user_id(user_id, user_name, my_number)
            text = f"–°–ø–∞—Å–∏–±–æ\n–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –°–ú–° üì® —Å –∫–æ–¥–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ \n–í–∞—à –Ω–æ–º–µ—Ä: {phone_num}"
            Bot.send_message(user_id, text, reply_markup=keyboard("DONE"))
            Bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥")
            my_data, my_log = USERauth.send_sms(phone_num, bot_name)
            try:
                data = json.loads(my_data)
            except ValueError as my_error:
                print(f"–û—à–∏–±–∫–∞: {my_error}")  # debug
                Bot.send_message(
                    user_id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\n–ù–∞–∂–º–∏—Ç–µ /start –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞")
                time_stop = time()
                set_log(my_log, time_stop - time_start, user_id)  # log
                set_log_error(user_id,
                              message.from_user.full_name, my_log,
                              str(my_error), phone_num,
                              "my_data, my_log = USERauth.send_sms(phone_num, bot_name)",
                              time_stop - time_start)  # logError
                DataBase.set_flood(user_id, 0)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º flood –Ω–∞ 0
                return

            if data["success"] == False:
                Bot.send_message(user_id, data["message"])  # –æ—Ç–ø—Ä–∞–≤—è–ª–µ–º –æ—à–∏–±–∫—É

            set_status(user_id, 1)  # –°—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å 1 —Å–º—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
            time_stop = time()
            set_log(my_log, time_stop - time_start, user_id)  # log
    else:
        Bot.send_message(user_id, "–Ø —É–∂–µ –∑–Ω–∞—é –≤–∞—à –Ω–æ–º–µ—Ä :)")

#–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ start
@Bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è '/start' –∏–ª–∏ '/help'"""
    user_id = message.from_user.id
    user_full_name = message.from_user.full_name

    #user_status = get_status(user_id)  # –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    if DataBase.get_flood(user_id) == 111: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        now = datetime.now()
        my_date = now.strftime("%d.%m.%Y %H:%M:%S")
        print(f"{my_date} | {user_full_name} | {user_id} | –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        Bot.send_message(user_id, f"| {user_full_name} | –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!", reply_markup=keyboards.keyboard("DONE"))
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ç—å –∫–∞–∫–æ–π-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Å—Å—ã–ª–∫–∏
    if " " in message.text:
        referrer_candidate = message.text.split()[1]
        my_referal_cod, my_referrer = DataBase.get_my_referal_cod(
            user_id)  # –ø–æ–ª—É—á–∞–µ–º —Å–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥

        if my_referal_cod == "Not Found":
            # –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π
            try:
                # print (f"–†–µ—Ñ–µ—Ä–∞–ª–Ω—ã–π –∫–æ–¥: {referer}") # –ø–µ—á–∞—Ç–∞–µ—Ç id —Ä–µ—Ñ–µ—Ä–∞–ª–∞ debug
                # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–¥ –≤ –±–∞–∑—É –±–æ—Ç–∞
                DataBase.set_referer_cod(user_id, referrer_candidate)
            except Exception as my_error:
                print(f"–û—à–∏–±–∫–∞: {my_error}")  # debug

        elif my_referrer != "0":  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è reverrer –ø—É—Å—Ç–æ–π
            Bot.send_message(
                user_id,
                "–û—à–∏–±–∫–∞: –†–∞–Ω–µ–µ –í—ã —É–∂–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –≤–æ–∑–º–æ–∂–Ω–∞!"
            )
        else:
            # –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π
            try:
                # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —Ä–µ—Ñ–µ—Ä–µ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                if my_referal_cod != referrer_candidate and referrer_candidate in DataBase.get_all_referal_cod():
                    referrer = referrer_candidate
                    # print (f"–†–µ—Ñ–µ—Ä–∞–ª–Ω—ã–π –∫–æ–¥: {referer}") # –ø–µ—á–∞—Ç–∞–µ—Ç id —Ä–µ—Ñ–µ—Ä–∞–ª–∞ debug
                    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–¥ –≤ –±–∞–∑—É –±–æ—Ç–∞
                    DataBase.update_referer_cod(user_id, referrer)
                else:
                    Bot.send_message(
                        user_id, "–û—à–∏–±–∫–∞: –¢–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ—Ç –ª–∏–±–æ –≤—ã –≤–≤–µ–ª–∏ —Å–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥.")
            except Exception as my_error:
                print(f"–û—à–∏–±–∫–∞: {my_error}")  # debug

    if user_status == 1:  # –ï—Å–ª–∏ status 1, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ start
        # time_start = time()
        Bot.send_message(user_id, "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!",
                         reply_markup=keyboard())  # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        mob_nomer = DataBase.get_mob(user_id)
        text = f"–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –°–ú–° üì® —Å –∫–æ–¥–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ \n–í–∞—à –Ω–æ–º–µ—Ä: {mob_nomer}"
        Bot.send_message(user_id, text, reply_markup=keyboard("DONE"))
        Bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥")
        my_data, my_log = USERauth.send_sms(mob_nomer, bot_name)
        try:
            data = json.loads(my_data)
        except ValueError as my_error:
            print(f"–û—à–∏–±–∫–∞: {my_error}")  # debug
            Bot.send_message(
                user_id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\n–ù–∞–∂–º–∏—Ç–µ /start –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞")
            time_stop = time()
            set_log(my_log, time_stop - time_start, user_id)  # log
            set_log_error(
                user_id,
                user_full_name,
                my_log, f"{my_error}", message.contact,
                "my_data, my_log = USERauth.send_sms(mob_nomer, bot_name)",
                time_stop - time_start
            )  # logError
            DataBase.set_flood(user_id, 0)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º flood –Ω–∞ 0
            return

        time_stop = time()
        set_log(my_log, time_stop - time_start, user_id)  # log

    elif user_status == 2:  # –ï—Å–ª–∏ status 2
        set_status(user_id, 3)  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å 3
        Bot.send_message(
            user_id,
            f"–ü—Ä–∏–≤–µ—Ç, {user_full_name} üëã\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à–µ –§–ò–û",
            reply_markup=keyboard("Normal")
        )

    elif user_status == 3:  # –ï—Å–ª–∏ status 3
        Bot.send_message(
            user_id,
            f"–ü—Ä–∏–≤–µ—Ç, {user_full_name} üëã\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à–µ –§–ò–û",
            reply_markup=keyboard("Normal")
        )

    elif user_status == 5:  # –ï—Å–ª–∏ status 5
        Bot.send_message(
            user_id, f"–ü—Ä–∏–≤–µ—Ç, {user_full_name} üëã\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!")
        Bot.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è\n–§–æ—Ä–º–∞—Ç: 01.01.2000",
                         reply_markup=keyboard("BIRTHDAY"))

    elif user_status >= 6:  # –ï—Å–ª–∏ status 6 –∏ –±–æ–ª—å—à–µ
        if message.chat.type != 'private':
            Bot.send_message(
                message.chat.id, 
                f"–ü—Ä–∏–≤–µ—Ç, {user_full_name} üëã\n–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤ –æ–±—â–∏—Ö —á–∞—Ç–∞—Ö –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è!"
            )
        else:
            # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            Bot.delete_message(user_id, message.message_id)
            my_msg_id = DataBase.get_message_id_temp(
                user_id, 16)  # –ø–æ–ª—É—á–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏–π
            if my_msg_id:
                for msg in my_msg_id:
                    Bot.delete_message(user_id, msg)  # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            # —É–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã temp
            DataBase.del_all_temp(user_id)
            DataBase.set_flood(user_id, 0)  # –æ–±–Ω—É–ª—è–µ–º flood —Å—Ç–∞—Ç—É—Å
            set_status(user_id, 6)  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å 6
            # —É–¥–∞–ª—è–µ–º —Ç–µ–º–ø –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–æ–≤
            DataBase.del_carservice_info(user_id)
            Bot.send_message(
                user_id, f"–ü—Ä–∏–≤–µ—Ç, {user_full_name} üëã\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!", reply_markup=keyboard("MAIN"))
    else:
        my_text = (
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{user_full_name}</b> üëã"
            "\n–Ø –±–æ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –í–∏–ª–≥—É–¥! üëª"
            "\n–ü–æ—Ö–æ–∂–µ –º—ã –Ω–µ –∑–Ω–∞–∫–æ–º—ã üëÄ"
            "\n–°–µ–π—á–∞—Å –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üîê"
            "\n–ù–∞–∂–º–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä</b>\n\n"
            f"–ü—Ä–æ—Ö–æ–¥—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —è –¥–∞—é —Å–æ–≥–ª–∞—Å–Ω–∏–µ –Ω–∞ <a href='https://wilgood.ru/upload/pdf/policy.pdf'>–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>"
        )
        Bot.send_message(user_id, my_text, reply_markup=keyboard(
            "CONTACT"), parse_mode="HTML")
        Bot.send_message(
            user_id, "–ï—Å–ª–∏ –Ω–µ –≤–∏–¥–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /send_phone")

# -----------------------------------------------------------------
Bot.delete_my_commands(scope=None, language_code=None)
Bot.set_my_commands(
    commands=[telebot.types.BotCommand("start", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
)
# -----------------------------------------------------------------

# —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –ù–ê–ß–ê–õ–û –≤—Å–µ–≥–æ
@Bot.message_handler(content_types=['text'], chat_types=['private'])
def handle_command(message):
    user_id = message.from_user.id
    user_status = get_status(user_id)  # –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
    user_full_name = message.from_user.full_name
    if my_global_debug != 0:
        now = datetime.now()
        my_date = now.strftime("%d.%m.%Y %H:%M:%S")
        set_log_debug(user_id, user_full_name, "–ù–∞–ø–∏—Å–∞–ª", message.text, user_status)  
        print(f"{my_date} | {user_full_name} | {user_id} | –ù–∞–ø–∏—Å–∞–ª | {message.text} | –°—Ç–∞—Ç—É—Å: {user_status}")
    # contact #?
    # MYsql.set_emergency(0) # –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–Ω–∏–º–∞–µ–º Emergency
    my_flood = DataBase.get_flood(user_id) # –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å flood
    if my_flood == 1:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–∂–¥–∞–ª—Å—è –ø—Ä–µ–¥–µ–¥—É—â–µ–π –∫–æ–º–∞–Ω–¥—ã
        Bot.send_message(
            user_id,
            "–ù–µ —Å–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞!\n"
            "–ï—Å–ª–∏ –≤—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞–ø—Ä–æ—Å,\n–Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. "
        )
        return
    elif my_flood == 111: # –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        now = datetime.now()
        my_date = now.strftime("%d.%m.%Y %H:%M:%S")
        print(f"{my_date} | {user_full_name} | {user_id} | –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        Bot.send_message(user_id, f"| {user_full_name} | –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!", reply_markup=keyboard("DONE"))
        return
    
    time_start = time()
    # –ø–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ä—Ç—É–µ–º –≤—Ä–µ–º—è
    #private.smart_reply(Bot, message, time_start, user_status, user_id, user_full_name)
    """ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º """
    bot_name = Bot.get_me().username
    DataBase.set_flood(user_id, 1)  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞—â–∏—Ç—É
    Bot.send_chat_action(user_id, "typing")  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–∫—à–µ–Ω

    if message.text == "‚úÖDone":
        Bot.send_message(user_id, "Done with Keyboard", reply_markup=keyboard("DONE"))
    elif message.text == "/test":
        Bot.send_message(user_id, "–í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

# Bot.infinity_polling(timeout=120) #–ù–µ–ø—Ä–µ–∫—Ä–∞—â–∞—é—â–∞—è—Å—è –ø—Ä–æ—Å–ª—É—à–∫–∞ –Ω–∞—à–∏—Ö —á–∞—Ç–æ–≤
try:
    # Bot.infinity_polling(timeout=120) #–ù–µ–ø—Ä–µ–∫—Ä–∞—â–∞—é—â–∞—è—Å—è –ø—Ä–æ—Å–ª—É—à–∫–∞ –Ω–∞—à–∏—Ö —á–∞—Ç–æ–≤
    Bot.polling(none_stop=True, interval=0,  timeout=120)
except Exception as my_bot_error:
    print(f"–û—à–∏–±–∫–∞: {my_bot_error}")  # debug
    print("Bot —É–ø–∞–ª –æ—Ç–∂–∞–ª—Å—è –∏ –≤—Å—Ç–∞–ª")  # debug
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    Bot.send_message(2964812, f"–û—à–∏–±–∫–∞: {my_bot_error}")
    # Bot.send_message(2964812, "Bot —É–ø–∞–ª –æ—Ç–∂–∞–ª—Å—è –∏ –≤—Å—Ç–∞–ª") # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    sleep(20)